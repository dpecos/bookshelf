version: "3.7"

services:
  backend:
    restart: unless-stopped
    build: ./backend
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
    labels:
      - traefik.enable=true
      - traefik.port=8080
      - traefik.http.routers.backend.rule=PathPrefix(`/api/`)
      - traefik.http.routers.backend.entrypoints=web

  frontend:
    restart: unless-stopped
    build:
      context: ./frontend
      args:
        - REACT_APP_BACKEND_PORT=3100
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.port=80
      - traefik.http.middlewares.frontend-auth.basicauth.users=bookshelf:$$apr1$$qRr7fgOH$$s2h1lckjG2qvMNjN8YWAj1
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.routers.frontend.middlewares=frontend-auth

  postgres:
    restart: unless-stopped
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bookshelf-prod
      POSTGRES_DB: bookshelf

  traefik:
    restart: unless-stopped
    image: traefik:v2.5
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    depends_on:
      - backend
      - frontend
    ports:
      - '3100:80'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data:
    driver: local
